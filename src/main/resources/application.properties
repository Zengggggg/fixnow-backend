spring.application.name=backend

server.address=0.0.0.0
server.port=8080


spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
# MySQL Database Configuration
spring.datasource.url=jdbc:${DB_URL}?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

# Show SQL statements in logs
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# OpenAI api Configuration
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.url=https://api.openai.com/v1/chat/completions
spring.ai.openai.chat.options.model=gpt-3.5-turbo

resend.api.key=${RESEND_KEY}
resend.from.email=FixNow <noreply@fixnow.io.vn>


# Email configuration
#gqet chyt gskz fhlm
email.username=fixnow2025@gmail.com
email.password=gqet chyt gskz fhlm
email.host=imap.gmail.com
email.port=993

logging.level.org.springframework.mail=DEBUG
logging.level.org.apache.commons.mail=DEBUG


# Google login Configuration

spring.security.oauth2.client.registration.google.client-id=${YOUR_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${YOUR_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# JWT Configuration
jwt.secret=${SECRET_KEY}
